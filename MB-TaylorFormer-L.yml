# general settings
name: OTS-Ll11_train #MPv2-linearViT-B14 #MP-taylor-B8-sigmoid
model_type: ImageCleanModel
scale: 1
num_gpu: 8  # set num_gpu: 0 for cpu mode
manual_seed: 100

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_PairedImage
    dataroot_gt: /data1/QYW/SOTS-Test/test/gt/
    dataroot_lq: /data1/QYW/SOTS-Test/test/hazy/
    geometric_augs: true

    filename_tmpl: '{}'
    io_backend:
      type: disk
    
    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 1


    ### -------------Progressive training--------------------------
    mini_batch_sizes: [1]             # Batch size per gpu
    iters: [192000]
    gt_size: 256 # Max patch size for progressive training
    gt_sizes: [256]  # Patch sizes for progressive training.
    ### ------------------------------------------------------------
    
    ### ------- Training on single fixed-patch size 128x128---------
    # mini_batch_sizes: [7]   
    # iters: [300000]
    # gt_size: 224   
    # gt_sizes: [256]
    ### ------------------------------------------------------------
    
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: ValSet
    type: Dataset_PairedImage
    dataroot_gt: /data1/QYW/SOTS-Test/valid_outdoor2/gt/
    dataroot_lq: /data1/QYW/SOTS-Test/valid_outdoor2/input/
    io_backend:
      type: disk

# network structures
network_g:
  type: MB_TaylorFormer
  model_name: 16 # 'cat:0' or 'mp:1' or 'o:2' or 'se:3'or'rotaryem:7'or"SU_CRPE:13"
  inp_channels: 3
  out_channels: 3
  dim: [24,48,72,96]   #[24,48,72,96]  #[30,60,92,112]    # [36,72,100,136]   #
  num_blocks: [4,6,6,8]
  num_refinement_blocks: 4
  heads: [1,2,4,8]
  ffn_expansion_factor: 2.66
  bias: False
  LayerNorm_type: WithBias
  dual_pixel_task: False
  num_path: [2,3,3,3]
  qk_norm: 0.5
  offset_clamp: [-3,3]

# path
path:
  pretrain_network_g: "/data0/QYW/MB-TaylorFormer-main/experiments/OTS-Ll10_train/models/net_g_24000.pth"
  strict_load_g: False
  resume_state: ~

# training settings
train:
  total_iter: 300000
  warmup_iter: -1 #20000  # no warm up
  use_grad_clip: true

  # Split 300k iterations into two cycles. 
  # 1st cycle: fixed 3e-4 LR for 92k iters. 
  # 2nd cycle: cosine annealing (3e-4 to 1e-6) for 208k iters.
  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [1, 100000]
    restart_weights: [1,1]
    eta_mins: [0.00001,0.0000001]

  mixing_augs:
    mixup: false
    mixup_beta: 1.2
    use_identity: true

  optim_g:
    type: AdamW
    lr: !!float 1e-5
    weight_decay: !!float 1e-4
    betas: [0.9, 0.999]

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: mean
    
    
  fft_loss_opt:
    type: FFTLoss
    loss_weight: 0.1
    reduction: mean

# validation settings
val:
  window_size: 8
  val_freq: !!float 500
  save_img: False
  rgb2bgr: true
  use_image: true
  max_minibatch: 8

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 500
  save_checkpoint_freq: !!float 500
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
